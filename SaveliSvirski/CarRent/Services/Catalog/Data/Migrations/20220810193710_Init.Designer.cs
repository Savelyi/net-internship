// <auto-generated />
using System;
using Data.CatalogContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20220810193710_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.CarMake", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("Make");

                    b.ToTable("Makes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10905a00-6578-41f4-9784-edafbf19ed4b"),
                            Make = "BMW"
                        },
                        new
                        {
                            Id = new Guid("3c3dbfdc-8329-43a8-aaae-8f2049b564f9"),
                            Make = "Mercedes"
                        },
                        new
                        {
                            Id = new Guid("8403feae-5c00-4fab-8ccd-475602fc111e"),
                            Make = "Audi"
                        },
                        new
                        {
                            Id = new Guid("4b108fbc-29f8-421d-b029-195d26fa65ae"),
                            Make = "Volkswagen"
                        });
                });

            modelBuilder.Entity("Data.Models.CarModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CarMakeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("RentPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("VehicleNumber");

                    b.HasIndex("CarMakeId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eff31885-c7d4-4f88-8559-4a676fdc5a5c"),
                            CarMakeId = new Guid("10905a00-6578-41f4-9784-edafbf19ed4b"),
                            IsAvailable = true,
                            Model = "M5",
                            RentPrice = 500m,
                            VehicleNumber = "1234AB-3"
                        },
                        new
                        {
                            Id = new Guid("1e8743d3-bf6b-4bfd-8b74-3d523c8042cd"),
                            CarMakeId = new Guid("3c3dbfdc-8329-43a8-aaae-8f2049b564f9"),
                            IsAvailable = true,
                            Model = "C43",
                            RentPrice = 600m,
                            VehicleNumber = "4321BC-7"
                        },
                        new
                        {
                            Id = new Guid("f8de7862-2ff1-4cd0-81fd-e9d34f665280"),
                            CarMakeId = new Guid("8403feae-5c00-4fab-8ccd-475602fc111e"),
                            IsAvailable = true,
                            Model = "RS4",
                            RentPrice = 550m,
                            VehicleNumber = "5674RY-7"
                        },
                        new
                        {
                            Id = new Guid("0692cb3a-77c3-4848-bd7d-41efd06e0884"),
                            CarMakeId = new Guid("4b108fbc-29f8-421d-b029-195d26fa65ae"),
                            IsAvailable = true,
                            Model = "Polo",
                            RentPrice = 300m,
                            VehicleNumber = "7676XD-7"
                        },
                        new
                        {
                            Id = new Guid("3daed40f-c48c-45a5-80a7-fb1f9f1e6ff4"),
                            CarMakeId = new Guid("10905a00-6578-41f4-9784-edafbf19ed4b"),
                            IsAvailable = true,
                            Model = "X6",
                            RentPrice = 650m,
                            VehicleNumber = "5436UI-5"
                        },
                        new
                        {
                            Id = new Guid("bb6a500f-eefe-465a-9793-37e368db1636"),
                            CarMakeId = new Guid("8403feae-5c00-4fab-8ccd-475602fc111e"),
                            IsAvailable = true,
                            Model = "A6",
                            RentPrice = 500m,
                            VehicleNumber = "9817YU-5"
                        });
                });

            modelBuilder.Entity("Data.Models.CarModel", b =>
                {
                    b.HasOne("Data.Models.CarMake", "CarMakeInfo")
                        .WithMany("CarModelInfo")
                        .HasForeignKey("CarMakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarMakeInfo");
                });

            modelBuilder.Entity("Data.Models.CarMake", b =>
                {
                    b.Navigation("CarModelInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
